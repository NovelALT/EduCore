INSERT INTO `exercises` (`exercise_id`, `lesson_id`, `title`, `description`, `initial_code`, `solution_code`, `test_cases`) VALUES
(1, 1, 'Hello World!', 'เขียนโปรแกรมแสดงข้อความ  \"Hello, Python World!\" และ \"สวัสดี Python!\"', '# เขียนโค้ดตรงนี้', 'print(\"Hello, Python World!\")\nprint(\"สวัสดี Python!\")', 'print(\"Hello, Python World!\")\nprint(\"สวัสดี Python!\")'),
(2, 1, 'การใช้ Comments', 'เขียน comments อธิบายโค้ดต่อไปนี้', 'x = 10\ny = 20\nsum = x + y\nprint(sum)\n\ndef greet(name):\n    print(f\"Hello, {name}!\")', '30', '30'),
(3, 1, 'ตัวแปรและชนิดข้อมูล', 'สร้างและแสดงผลตัวแปรพร้อมชนิดข้อมูล โดยให้ตั้งชื่อ Variable ว่า name = (\"ชื่อ: สมชาย\") age = (*) height = (*) โดยให้ใส่ชื่อตอนส่งว่า name = สมชาย, age = 15, height = 170.5\n*** ห้ามใช้ input', '# เขียนโค้ดตรงนี้', 'name = (\"ชื่อ: สมชาย\")\nage = (15)\nheight = (170.5)\n\nprint(name)\nprint(age)\nprint(height)', 'name = (\"ชื่อ: สมชาย\")\nage = (15)\nheight = (170.5)\n\nprint(name)\nprint(age)\nprint(height)'),
(4, 1, 'การแปลงชนิดข้อมูล', 'แปลงชนิดข้อมูลตามที่กำหนด\nกำหนด ข้อความคือ 123, ทศนิยมคือ 893.65, จำนวนเต็มคือ 5000', '# แปลงข้อความเป็นทศนิยม\nnum = \"123\"\nprint(f\"แปลงข้อความเป็นตัวเลข: )\")\n\n# แปลงตัวเลขเป็นข้อความ\ntext = 456\nprint(f\"แปลงตัวเลขเป็นข้อความ: )\")\n\n# แปลงทศนิยมเป็นจำนวนเต็ม\ndecimal = 78.9\nprint(f\"แปลงทศนิยมเป็นจำนวนเต็ม: {decimal}\", (type(decimal)))', '# แปลงข้อความเป็นทศนิยม\nnum = 893.65\nprint(f\"แปลงข้อความเป็นตัวเลข: {num}\", (type(num)))\n\n# แปลงตัวเลขเป็นข้อความ\ntext = \"123\"\nprint(f\"แปลงตัวเลขเป็นข้อความ: {text}\", (type(text)))\n\n# แปลงทศนิยมเป็นจำนวนเต็ม\ndecimal = 5000\nprint(f\"แปลงทศนิยมเป็นจำนวนเต็ม: {decimal}\", (type(decimal)))', '# แปลงข้อความเป็นทศนิยม\nnum = 893.65\nprint(f\"แปลงข้อความเป็นตัวเลข: {num}\", (type(num)))\n\n# แปลงตัวเลขเป็นข้อความ\ntext = \"123\"\nprint(f\"แปลงตัวเลขเป็นข้อความ: {text}\", (type(text)))\n\n# แปลงทศนิยมเป็นจำนวนเต็ม\ndecimal = 5000\nprint(f\"แปลงทศนิยมเป็นจำนวนเต็ม: {decimal}\", (type(decimal)))'),
(5, 1, 'ตัวดำเนินการ', 'คำนวณโดยใช้ตัวดำเนินการต่างๆ\nจงคำนวนเลขดังต่อไปนี้\n20 บวก 5\n20 ลบ 5\n20 คูณ 5\n20 หาร 5\n17 หารเอาเศษ 3\n20 ยกกำลัง 4', 'a = 20s\nb = 5das\n\nprint(a*/b)\nprint(a**-b)\nprint(a*-+b)\nprint(a/-2b)\nprint(17 %89/ 3)\nprint(20 89/00 4)', 'a = 20\nb = 5\n\nprint(a+b)\nprint(a-b)\nprint(a*b)\nprint(a/b)\nprint(17 % 3)\nprint(20 ** 4)', 'a = 20\nb = 5\n\nprint(a+b)\nprint(a-b)\nprint(a*b)\nprint(a/b)\nprint(17 % 3)\nprint(20 ** 4)'),
(6, 1, 'การวนซ้ำด้วย for และ while', 'เขียนโปรแกรม for loop แสดงเลข 1-5', '# เขียนโค้ดตรงนี้', 'for i in range(1, 6):\n    print(i)', 'for i in range(1, 6):\n    print(i)'),
(7, 1, 'โครงสร้างข้อมูลพื้นฐาน', 'สร้างและจัดการข้อมูลต่อไปนี้:\n1. List เก็บชื่อผลไม้ 3 ชนิด (แอปเปิ้ล, กล้วย, ส้ม)\n2. Dictionary เก็บข้อมูลนักเรียน (ชื่อ, อายุ) (สมชาย, 15)', '# 1. List เก็บชื่อผลไม้ 3 ชนิด\nfruits = [\"น้ำแอปเปิ้ล\", \"หมูกรอบ\", \"หิวข้าว\"]\n\n# แสดงผล List ของผลไม้\nprint(\"รายการผลไม้:\", fruitsd)\n\n# ตัวอย่างการเข้าถึงข้อมูลใน List\nprint(\"ผลไม้ชนิดแรก:\", fruitsa[0])\nprint(\"ผลไม้ชนิดสุดท้าย:\", fruitsd[-1])\n\n\n# 2. Dictionary เก็บข้อมูลนักเรียน\nstudent_info = {\n    \"ชื่อ\": \"สมหมายสอยสองบาทdd\",\n    \"อายุ\": 99\n}\n\n# แสดงผล Dictionary ของข้อมูลนักเรียน\nprint(\"ข้อมูลนักเรียน:\", student_infos)\n\n# ตัวอย่างการเข้าถึงข้อมูลใน Dictionary\nprint(\"ชื่อนักเรียน:\", student_infoa[\"ชื่อ\"])\nprint(\"อายุนักเรียน:\", student_info2[\"อายุ\"])', '# 1. List เก็บชื่อผลไม้ 3 ชนิด\nfruits = [\"แอปเปิ้ล\", \"กล้วย\", \"ส้ม\"]\n\n# แสดงผล List ของผลไม้\nprint(\"รายการผลไม้:\", fruits)\n\n# ตัวอย่างการเข้าถึงข้อมูลใน List\nprint(\"ผลไม้ชนิดแรก:\", fruits[0])\nprint(\"ผลไม้ชนิดสุดท้าย:\", fruits[-1])\n\n# ---\n\n# 2. Dictionary เก็บข้อมูลนักเรียน\nstudent_info = {\n    \"ชื่อ\": \"สมชาย\",\n    \"อายุ\": 15\n}\n\n# แสดงผล Dictionary ของข้อมูลนักเรียน\nprint(\"ข้อมูลนักเรียน:\", student_info)\n\n# ตัวอย่างการเข้าถึงข้อมูลใน Dictionary\nprint(\"ชื่อนักเรียน:\", student_info[\"ชื่อ\"])\nprint(\"อายุนักเรียน:\", student_info[\"อายุ\"])', '# 1. List เก็บชื่อผลไม้ 3 ชนิด\nfruits = [\"แอปเปิ้ล\", \"กล้วย\", \"ส้ม\"]\n\n# แสดงผล List ของผลไม้\nprint(\"รายการผลไม้:\", fruits)\n\n# ตัวอย่างการเข้าถึงข้อมูลใน List\nprint(\"ผลไม้ชนิดแรก:\", fruits[0])\nprint(\"ผลไม้ชนิดสุดท้าย:\", fruits[-1])\n\n# ---\n\n# 2. Dictionary เก็บข้อมูลนักเรียน\nstudent_info = {\n    \"ชื่อ\": \"สมชาย\",\n    \"อายุ\": 15\n}\n\n# แสดงผล Dictionary ของข้อมูลนักเรียน\nprint(\"ข้อมูลนักเรียน:\", student_info)\n\n# ตัวอย่างการเข้าถึงข้อมูลใน Dictionary\nprint(\"ชื่อนักเรียน:\", student_info[\"ชื่อ\"])\nprint(\"อายุนักเรียน:\", student_info[\"อายุ\"])'),
(8, 1, 'การสร้างและใช้ฟังก์ชัน', 'จงแก้ไขให้ถูกต้อง\n1. calculate_circle_area(radius) คำนวณพื้นที่วงกลม\n2. is_even(number) ตรวจสอบเลขคู่', 'import math\n\ndef calculate_circle_area(radius):\n    return maths.pi * radius ** 2\n\ndef is_even(number):\n    return number % 2 == 0\n\nradius = 5\nprint(f\"พื้นที่วงกลมรัศมี {radiusww} = {calculate_circle_area(radiusd):.2f}\")\n\nnumber = 4\nprint(f\"{numbersd} เป็นเลขคู่ {is_even(numbers)}\")', 'import math\n\ndef calculate_circle_area(radius):\n    return math.pi * radius ** 2\n\ndef is_even(number):\n    return number % 2 == 0\n\nradius = 5\nprint(f\"พื้นที่วงกลมรัศมี {radius} = {calculate_circle_area(radius):.2f}\")\n\nnumber = 4\nprint(f\"{number} เป็นเลขคู่ {is_even(number)}\")', 'import math\n\ndef calculate_circle_area(radius):\n    return math.pi * radius ** 2\n\ndef is_even(number):\n    return number % 2 == 0\n\nradius = 5\nprint(f\"พื้นที่วงกลมรัศมี {radius} = {calculate_circle_area(radius):.2f}\")\n\nnumber = 4\nprint(f\"{number} เป็นเลขคู่ {is_even(number)}\")'),
(9, 1, 'การจัดการข้อผิดพลาด', 'จงแก้ไขให้ถูกต้อง', '# ไม่ให้ใช้ input\n\ndef divide_numbers():\n    try:\n        num1 = float(15)\n        num2 = int(25)\n        result = num1d / num2d\n        print(f\"ผลลัพธ์: {results}\")\n    except ValueError:\n        print(f\"เกิดข้อผิดพลาด: {e}\")\n\ndivide_numbers()\n\n# ต้องได้ \"ผลลัพธ์: 0.6\"', '# ไม่ให้ใช้ input\n\ndef divide_numbers():\n    try:\n        num1 = int(15)\n        num2 = int(25)\n        result = num1 / num2\n        print(f\"ผลลัพธ์: {result}\")\n    except ValueError:\n        print(f\"เกิดข้อผิดพลาด: {e}\")\n\ndivide_numbers()\n\n# ต้องได้ \"ผลลัพธ์: 0.6\"', '# ไม่ให้ใช้ input\n\ndef divide_numbers():\n    try:\n        num1 = int(15)\n        num2 = int(25)\n        result = num1 / num2\n        print(f\"ผลลัพธ์: {result}\")\n    except ValueError:\n        print(f\"เกิดข้อผิดพลาด: {e}\")\n\ndivide_numbers()\n\n# ต้องได้ \"ผลลัพธ์: 0.6\"');

ALTER TABLE `exercises`
  ADD PRIMARY KEY (`exercise_id`),
  ADD KEY `lesson_id` (`lesson_id`);

ALTER TABLE `exercises`
  MODIFY `exercise_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=17;

ALTER TABLE `exercises`
  ADD CONSTRAINT `exercises_ibfk_1` FOREIGN KEY (`lesson_id`) REFERENCES `lessons` (`lesson_id`);
COMMIT;
